// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(100)
  name      String   @db.VarChar(100)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)

  history History? @relation("UserHistory")

  @@index([email])
  @@map("users")
}

model Sambal {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @unique @db.VarChar(100)
  description String   @db.Text
  picture     String   @db.VarChar(255)
  alergens    String   @db.Text
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  updatedAt   DateTime @default(now()) @db.Timestamp(6)

  histories HistorySambal[]

  @@index([name])
  @@map("sambals")
}

model History {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @unique @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)

  user    User            @relation("UserHistory", fields: [userId], references: [id])
  sambals HistorySambal[]

  @@map("histories")
}

model HistorySambal {
  historyId String @db.Uuid
  sambalId  String @db.Uuid

  history History @relation(fields: [historyId], references: [id])
  sambal  Sambal  @relation(fields: [sambalId], references: [id])

  @@id([historyId, sambalId])
  @@map("history_sambals")
}
